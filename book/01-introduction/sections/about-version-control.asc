=== Sürüm Kontrolü Hakkında

(((version control)))
``Sürüm kontrülü`` nedir ve neden önemsemeliyiz?
Sürüm kontrolü, değişiklikleri bir dosyaya kaydeden veya dosyalaları daha sonra dosyaları belirli bir sürüme çağırmak için kullanılan sistemdir.
Örneğin, bu kitapta yazılım kaynak kodlarını sürüm kontrol edilirken kullanacaksınız, gerçi gerçek hayatta bunu bilgisayardaki neredeyse bütün dosya türleri için yapabilirsiniz.

Grafik veya web tasarımcısıysanız ve bir görüntünün veya düzenin her sürümünü saklamak istiyorsanız (ki bunu kesinlikle yapmak istersiniz), bir Sürüm Kontrol Sistemi(SKS) kullanmanız akıllıca olur.
Bu size dosyaları önceki durumuna döndürmenize izin verir, tüm projeyi önceki durumuna döndürür, zaman içindeki değişiklikleri kıyaslar, en son kimin, problem yaratabilecek düzenleme yaptığını görür, bir sorunu kimin ve ne zaman yazdığını gösterir ve daha fazlası.
Ayrıca SKS kullanmak genellikle eğer işleri berbat ederseniz veya dosyaları kaybederseniz, kolaylıkla kurtarabilirsiniz.
Ek olarak, tüm bunları çok ufak bir ek yük ile elde edersiniz.


==== Yerel Sürüm Kontrol Sistemi

(((version control,local)))
Çoğu insanın sürüm-kontrol yöntem seçimi dosyayı başka bir klasöre kopyalamaktır (belki zaman-damgalı klasör, eğer zekilerse).
Bu yaklaşım çok geneldir çünkü basittir ama ayrıca inanılmaz derecede hataya eğilimlidir.
Hangi klasör olduğunu unutmak çok kolaydır ve yanlışlıkla istemediğiniz dosyayı, dosyaların üzerine yazar veya kopyalarsınız.

To sorunla başa çıkabilmek için, yazılımcılar uzun zaman önce, tüm değişiklikleri revizyon kontrolü altında bir dosyada saklayan, basit bir veritabanına sahip yerel SKS'ler geliştirdiler

.Yerel sürüm kontorlü.
image::images/local.png[Yerel sürüm kontrol şeması]

En popüler SKS gereçlerinden birisi, bugün bile birçok bilgisayara yayılmmış RCS'dir.

RCS yama setlerini (dosyalar arasındaki farklılıklar), disk üzerndeki özel biçim içinde saklayarak çalşır; yamaları ekleyerek zaman içindeki her hangibir noktada nasıl göründüğüne göre dosyayı tekrar oluşturur.


==== Merkezi Sürüm Kontrol Sistemi

(((version control,centralized)))
İnsanların karşılaştırğı en büyük sorun diğer sistemler üzerinde geliştiricilerle iş birliği yapma ihtiyacıdır.
Bu problemle başa çıkmak için, Merkezi Sürüm Kontrol Sistemi (MSKS'ler) geliştirildi.
Bu sistemler, SKS, Subversion, ve Perforce gibi, tüm sürümlü dosyaların olduğu tek bir sunucuya sahipler ve çok sayıda müşteri merkezi bir yerden dosyaları kontrol ediyorlar. (((SKS)))(((Subversion)))(((Perforce)))
Bu, sürüm kontrolü için yıllardır standart olmuştur.

.Merkesi sürüm kontrolü.
image::images/centralized.png[Merkesi sürüm kontrol şeması]

Bu kurulum birçok avantaj sunar, özellikle yerel SKS'ler üzerinde.
Örneğin; herkes, proje üzerinde diğerleri ne yapıyor kesin derecede bilir.
Yöneticiler kim, ne yapabilir üzerinde ince-detaylı kontrole sahiptir ve bir SKS'yi yönetmek, her müşteride yerel veritabanıyla uğraşmaktan çok daha iyidir.

Buna rağmen bu kurulumun bazı ciddi olumsuzlukları vardır.
En ortada olanı, merkezi sunucunun ortaya çıkan çok küçük bir hata.
Eğer sunucu 1 saat çevrimdışı olursa, bu süre boyunca hiç kimse üzerinde çalıştığı hiç bir şeyin sürüm değişikliklerini kaydedemez veya iş birliği yapamaz.
Eğer merkezi vertabanı harddiski bozulursa ve uygun yedekler saklanmamışsa, kesinlikle herşeyi kaybedersiniz -- insanların yerel  makinalarında şans eseri kalan her çeşit bellek kopyası hariç tüm geçmişi..
Yerel SKS sistemleri aynı problemden acı çekerler -- ne zaman projenizin tüm geçmişini tek bir yerde saklarsanız, herşeyi kaybetme riskine girersiniz.

==== Dağıtılmış Sürüm Kontrol Sistemleri

(((version control,distributed)))
İşte Dağıtılmış Sürüm Kontrol Sistemlerinin (DSKS'lerin) devreye girdiği nokta burası.
DSKS'lerde (Git, Mercurial, Bazaar veya Darcs gibi), müşteriler sadece dosyalarının son bellek kopyalarını kontrol etmezler; tercihen , tüm geçmişiyle birlikte, depolarının hepsini yansıtırlar.
Böylece eğer bir sunucu ölürse ve bu sistemler sunucu vasıtasıyla işbirliği içindeyse, müşterinin depolarından herhangi birisi sunucuya kopyalanabilir ve eski durumuna getirilebilir.
Her kopya, gerçekte tüm verinin dolu bir yedeğidir.

.Dağıtılmış Sürüm Kontrolü.
image::images/distributed.png[Dağıtılmış sürüm kontrol şeması]

Üstelik bu sistemlerin çoğu çalışabildikleri birden fazla uzak depolarla güzel başa çıkabilirler, böylece aynı proje içinde eşzamanlı olarak, farklı yollarla çalışan insanların gruplarıyla iş birliği yapabilirsiniz.
Bu da size, hiyerarşik modellerler gibi merkezi sistemlerde mümkün olmayan, birden fazla iş akışı türü ayarlamanıza izin verir
