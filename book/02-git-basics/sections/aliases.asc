[[_git_aliases]]
=== Git Takma İsimleri

(((aliases)))
Bu bölümde temel Git'i bitirmeden önce, Git deneyiminizi daha sade, daha kolay ve daha yaygın hale getirecek küçük bir ipucu var: takma isimler.
Onlara değinmeyeceğiz veya daha sonra kitapta kullandığınızı varsayıyoruz, ancak muhtemelen onların nasıl kullanılacağını biliyor olmalısınız.

Eğer kısmen yazarsanız, Git komutunuzu otomatik olarak yorumlamaz.
Git komutlarının her birinin bütün metnini yazmak istemiyorsanız, `git config`.(((git commands, config))) kullanarak her komut için kolayca bir takma ad ayarlayabilirsiniz.
Aşağıda, kurmak isteyebileceğiniz birkaç örnek verilmiştir:

[source,console]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

Bunun anlamı, örneğin, `git commit` yazmanın yerine, sadece `git ci` yazmanız gerekir.
Git'i kullanmaya devam ederken muhtemelen diğer komutları da sıklıkla kullanacaksınız; Yeni takma adlar oluşturmakta çekinmeyin.

Bu teknik aynı zamanda olması gerektiğini düşündüğünüz komutları yaratmada çok yararlı olabilir.
Örneğin, bir dosyayı adım adım kaldırırken karşılaştığınız kullanılabilirlik sorununu düzeltmek için, kendi sahte olmayan takma isimlerini Git'e ekleyebilirsiniz:

[source,console]
----
$ git config --global alias.unstage 'reset HEAD --'
----

Bu aşağıdaki iki komutu eşdeğer yapar:

[source,console]
----
$ git unstage fileA
$ git reset HEAD -- fileA
----

Bu biraz daha anlaşılır görünüyor.
Ayrıca bir `last` komutu eklemek de yaygındır, bunun gibi:

[source,console]
----
$ git config --global alias.last 'log -1 HEAD'
----

Bu şekilde, son öneriyi kolayca görebilirsiniz:

[source,console]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

    test for current head

    Signed-off-by: Scott Chacon <schacon@example.com>
----

Gördüğünüz gibi, Git basitçe, yeni komutu sizin için takma isimlerle değiştirir.
Bununla birlikte, belki de bir Git alt komutu yerine harici bir komut çalıştırmak istiyorsunuzdur.
Bu durumda , bir `!` karakteri ile komutu başlatırsınız.
Eğer Git deposu ile çalışan kendi araçlarınızı yazarsanız bu kullanışlı olacaktır.
`gitk` çalıştırmak için `git visual` örtüşme ile gösterebiliriz:

[source,console]
----
$ git config --global alias.visual '!gitk'
----
