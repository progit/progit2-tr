[[_git_aliases]]
=== Git Takma Adları

(((takma adlar)))
Bu bölümde temel Git'i bitirmeden önce, Git deneyiminizi daha kolay ve daha tanıdık hale getirecek küçük bir ipucu var: takma adlar.
Onlara atıfta bulunmayacağız daha sonra kitapta kullandığınızı varsayıyoruz, ancak bunların nasıl kullanılacağını biliyor olmalısınız.

Kısmen yazarsanız Git, komutunuzu otomatik olarak yorumlamaz.
Git komutlarının her birinin tüm metnini yazmak istemiyorsanız, `git config`'yi kullanarak her komut için ayrı bir takma ad ayarlayabilirsiniz. (((Git komutları, yapılandırma)))
Aşağıda, kurmak isteyebileceğiniz birkaç örnek verilmiştir:

[kaynak, konsol]
----
$ git config --global alias.co checkout
$ git config --global alias.br branch
$ git config --global alias.ci commit
$ git config --global alias.st status
----

Bu şu demek, `git commit` yazmak yerine` git ci` yazmanız yeterlidir.
Git'i kullanmaya devam ederken muhtemelen diğer komutları da sıklıkla kullanacaksınız; Yeni takma adlar oluşturmakta tereddüt etmeyin.

Bu teknik aynı zamanda var olması gerektiğini düşündüğünüz komutları yaratmada çok yararlı olabilir.
Örneğin, bir dosyayı adım adım kaldırırken karşılaştığınız kullanılabilirlik sorununu düzeltmek için, kendi sahte olmayan takma adını Git'e ekleyebilirsiniz:

[kaynak, konsol]
----
$ git config --global alias.unstage 'reset HEAD --'
----

Bu, aşağıdaki iki komutu eşdeğer yapar:

[kaynak, konsol]
----
$ git unstage fileA
$ git reset HEAD -- fileA
----

Bu biraz daha net görünüyor.
Bunun gibi bir 'son' komutu eklemek de yaygın bir işlemdir:

[kaynak, konsol]
----
$ git config --global alias.last 'log -1 HEAD'
----

Bu şekilde, son taahhüdü kolayca görebilirsiniz:

[kaynak, konsol]
----
$ git last
commit 66938dae3329c7aebe598c2246a8e6af90d04646
Author: Josh Goebel <dreamer3@example.com>
Date:   Tue Aug 26 19:48:51 2008 +0800

   geçerli başlık için test

    Signed-off-by: Scott Chacon <schacon@example.com>
----

Gördüğünüz gibi, Git yalnızca yeni komutu, sizin için takma adla değiştirir.
Bununla birlikte, belki bir Git alt komutu yerine harici bir komut çalıştırmak istiyorsunuz.
Bu durumda komutu bir `!` Karakteriyle başlatırsınız.
Git deposu ile çalışan kendi araçlarınızı yazarsanız bu yararlı olacaktır.
Git komutunu çalıştırmayı `git görsel 'takma adı kullanarak sağlayabiliriz:

[kaynak, konsol]
----
$ git config --global alias.visual '!gitk'
----
